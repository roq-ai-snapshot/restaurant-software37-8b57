generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model menu_items {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String        @db.VarChar(255)
  description String?
  price       Int
  image_url   String?       @db.VarChar(255)
  menu_id     String        @db.Uuid
  menus       menus         @relation(fields: [menu_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order_items order_items[]
}

model menus {
  id            String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  restaurant_id String       @db.Uuid
  menu_items    menu_items[]
  restaurants   restaurants  @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model order_items {
  id           String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  order_id     String     @db.Uuid
  menu_item_id String     @db.Uuid
  quantity     Int
  price        Int
  menu_items   menu_items @relation(fields: [menu_item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  orders       orders     @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model orders {
  id            String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_id   String        @db.Uuid
  restaurant_id String        @db.Uuid
  status        String        @db.VarChar(50)
  total_price   Int
  created_at    DateTime      @db.Timestamp(6)
  updated_at    DateTime      @db.Timestamp(6)
  order_items   order_items[]
  users         users         @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  restaurants   restaurants   @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model reservations {
  id            String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_id   String      @db.Uuid
  restaurant_id String      @db.Uuid
  date          DateTime    @db.Timestamp(6)
  time          DateTime    @db.Timestamp(6)
  party_size    Int
  table_number  Int
  users         users       @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  restaurants   restaurants @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model restaurants {
  id               String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name             String             @db.VarChar(255)
  location         String             @db.VarChar(255)
  contact_details  String             @db.VarChar(255)
  operating_hours  String             @db.VarChar(255)
  owner_id         String             @db.Uuid
  menus            menus[]
  orders           orders[]
  reservations     reservations[]
  users            users              @relation(fields: [owner_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  staff_restaurant staff_restaurant[]
}

model staff_restaurant {
  id            String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id       String      @db.Uuid
  restaurant_id String      @db.Uuid
  restaurants   restaurants @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users         users       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id               String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name             String             @db.VarChar(255)
  email            String             @unique @db.VarChar(255)
  password         String             @db.VarChar(255)
  role             String             @db.VarChar(50)
  orders           orders[]
  reservations     reservations[]
  restaurants      restaurants[]
  staff_restaurant staff_restaurant[]
}
